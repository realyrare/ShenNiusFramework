<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ShenNius.ModuleCore</name>
    </assembly>
    <members>
        <member name="M:ModuleCore.AppModule.Impl.AppModule.OnPreConfigureServices(ModuleCore.Context.ServiceConfigurationContext)">
            <summary>
            配置服务前
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ModuleCore.AppModule.Impl.AppModule.OnConfigureServices(ModuleCore.Context.ServiceConfigurationContext)">
            <summary>
            配置服务
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ModuleCore.AppModule.Impl.AppModule.OnPostConfigureServices(ModuleCore.Context.ServiceConfigurationContext)">
            <summary>
            配置服务后
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ModuleCore.AppModule.Impl.AppModule.OnPreApplicationInitialization(ModuleCore.Context.ApplicationInitializationContext)">
            <summary>
            应用启动前
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ModuleCore.AppModule.Impl.AppModule.OnApplicationInitialization(ModuleCore.Context.ApplicationInitializationContext)">
            <summary>
            应用启动
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ModuleCore.AppModule.Impl.AppModule.OnPostApplicationInitialization(ModuleCore.Context.ApplicationInitializationContext)">
            <summary>
            应用启动后
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ModuleCore.AppModule.Impl.AppModule.OnApplicationShutdown(ModuleCore.Context.ApplicationShutdownContext)">
            <summary>
            应用停止
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:ModuleCore.AppModule.Interface.IAppModule">
            <summary>
            应用模块接口定义
            </summary>
        </member>
        <member name="M:ModuleCore.AppModule.Interface.IAppModule.OnPreConfigureServices(ModuleCore.Context.ServiceConfigurationContext)">
            <summary>
            配置服务前
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ModuleCore.AppModule.Interface.IAppModule.OnConfigureServices(ModuleCore.Context.ServiceConfigurationContext)">
            <summary>
            配置服务
            </summary>
            <param name="context">配置上下文</param>
        </member>
        <member name="M:ModuleCore.AppModule.Interface.IAppModule.OnPostConfigureServices(ModuleCore.Context.ServiceConfigurationContext)">
            <summary>
            配置服务后
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ModuleCore.AppModule.Interface.IAppModule.OnPreApplicationInitialization(ModuleCore.Context.ApplicationInitializationContext)">
            <summary>
            应用启动前
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ModuleCore.AppModule.Interface.IAppModule.OnApplicationInitialization(ModuleCore.Context.ApplicationInitializationContext)">
            <summary>
            应用启动
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ModuleCore.AppModule.Interface.IAppModule.OnPostApplicationInitialization(ModuleCore.Context.ApplicationInitializationContext)">
            <summary>
            应用启动后
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ModuleCore.AppModule.Interface.IAppModule.OnApplicationShutdown(ModuleCore.Context.ApplicationShutdownContext)">
            <summary>
            应用停止
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:ModuleCore.Attribute.DependsOnAttribute">
            <summary>
            模块依赖的模块
            </summary>
        </member>
        <member name="P:ModuleCore.Attribute.DependsOnAttribute.DependModuleTypes">
            <summary>
            依赖的模块类型
            </summary>
        </member>
        <member name="T:ModuleCore.Context.ApplicationInitializationContext">
            <summary>
            应用初始化上下文
            </summary>
        </member>
        <member name="T:ModuleCore.Context.ApplicationShutdownContext">
            <summary>
            应用卸载上下文
            </summary>
        </member>
        <member name="T:ModuleCore.Descriptor.Impl.ModuleDescriptor">
            <summary>
            模块描述
            </summary>
        </member>
        <member name="T:ModuleCore.Descriptor.Interface.IModuleDescriptor">
            <summary>
            模块描述信息
            </summary>
        </member>
        <member name="P:ModuleCore.Descriptor.Interface.IModuleDescriptor.ModuleType">
            <summary>
            模块类型
            </summary>
        </member>
        <member name="P:ModuleCore.Descriptor.Interface.IModuleDescriptor.Dependencies">
            <summary>
            依赖项
            </summary>
        </member>
        <member name="P:ModuleCore.Descriptor.Interface.IModuleDescriptor.Instance">
            <summary>
            实例,只创建一次
            </summary>
        </member>
        <member name="M:ModuleCore.Extensions.ModuleIApplicationBuilderExtensions.UseModule(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            使用Module
            </summary>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:ModuleCore.Extensions.ModuleServiceCollectionExtensions.AddModule``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            添加模块服务
            </summary>
            <typeparam name="T"></typeparam>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="F:ModuleCore.Manage.Impl.ModuleManager._moduleInterfaceTypeFullName">
            <summary>
            模块接口类型全名称
            </summary>
        </member>
        <member name="P:ModuleCore.Manage.Impl.ModuleManager.ModuleDescriptors">
            <summary>
            模块明细和实例
            </summary>
        </member>
        <member name="P:ModuleCore.Manage.Impl.ModuleManager.ServiceProvider">
            <summary>
            ioc容器
            </summary>
        </member>
        <member name="M:ModuleCore.Manage.Impl.ModuleManager.StartModule``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <inheritdoc/>
        </member>
        <member name="M:ModuleCore.Manage.Impl.ModuleManager.ConfigurationService(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <inheritdoc/>
        </member>
        <member name="M:ModuleCore.Manage.Impl.ModuleManager.ApplicationInitialization(System.IServiceProvider)">
            <inheritdoc/>
        </member>
        <member name="M:ModuleCore.Manage.Impl.ModuleManager.ApplicationShutdown">
            <inheritdoc/>
        </member>
        <member name="M:ModuleCore.Manage.Impl.ModuleManager.ModuleSort``1">
            <inheritdoc/>
        </member>
        <member name="M:ModuleCore.Manage.Impl.ModuleManager.VisitModule(System.Type)">
            <summary>
            遍历模块
            </summary>
            <param name="moduleType"></param>
            <returns></returns>
        </member>
        <member name="M:ModuleCore.Manage.Interface.IModuleManager.StartModule``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            启动模块
            </summary>
            <typeparam name="TModule"></typeparam>
        </member>
        <member name="P:ModuleCore.Manage.Interface.IModuleManager.ModuleDescriptors">
            <summary>
            模块描述信息
            </summary>
        </member>
        <member name="M:ModuleCore.Manage.Interface.IModuleManager.ModuleSort``1">
            <summary>
            模块排序
            </summary>
            <typeparam name="TModule">启动模块类型</typeparam>
            <returns>排序结果</returns>
        </member>
        <member name="M:ModuleCore.Manage.Interface.IModuleManager.ConfigurationService(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            配置服务
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:ModuleCore.Manage.Interface.IModuleManager.ApplicationInitialization(System.IServiceProvider)">
            <summary>
            配置应用初始化
            </summary>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:ModuleCore.Manage.Interface.IModuleManager.ApplicationShutdown">
            <summary>
            应用程序停止
            </summary>
        </member>
        <member name="T:ModuleCore.Topology.Topological">
            <summary>
            拓扑排序工具类
            </summary>
        </member>
        <member name="M:ModuleCore.Topology.Topological.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            进行拓扑排序
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="source">元数据</param>
            <param name="getDependencies">依赖获取函数</param>
            <returns></returns>
        </member>
        <member name="M:ModuleCore.Topology.Topological.Visit``1(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.List{``0},System.Collections.Generic.Dictionary{``0,System.Boolean})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item"></param>
            <param name="getDependencies"></param>
            <param name="sorted"></param>
            <param name="visited"></param>
        </member>
    </members>
</doc>
